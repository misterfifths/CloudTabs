#!/usr/bin/env bash

set -euo pipefail

cd "$(dirname "$0")"


CHROME="/Applications/Google Chrome.app/Contents/MacOS/Google Chrome"
CHROME_APP_SUPPORT_DIR="/Library/Google/Chrome"
APP_SUPPORT_DIR="/Library/Application Support/ChromeCloudTabs"
BUNDLE_ID="com.github.misterfifths.CloudTabs"
VERSION=$(cat VERSION)


echo ">> Cleaning up..."

[ -d build ] && rm -r build
[ -d dist ] && rm -r dist

mkdir build
mkdir dist


echo ">> Building native host..."

xcodebuild -project CloudTabs.xcodeproj -configuration Release -quiet


echo ">> Moving things into place..."

cp -R extension build/

mkdir -p build/native-host-manifest
cp com.github.misterfifths.cloudtabs_host.json build/native-host-manifest


echo ">> Updating extension key..."
./rekey-extension


echo ">> Patching version number..."
./patch-version


echo ">> Sanitizing..."

# Clean up any junk and extended attributes before packaging
find build -type f -name .DS_Store -delete
find build -type f -exec xattr -c "{}" \;


# The Chrome store doesn't like .crx files anymore... skipping this for now in favor of a zip
# echo ">> Packing extension..."

# # There's no way to control the filename of the .crx this generates; it's always <directory name>.crx.
# # --no-message-box seems to have no effect on recent Chromes, but apparently once upon a time it was necessary
# # to do this without user intervention.
# "$CHROME" --pack-extension="`pwd`/build/extension" --pack-extension-key=extension-key.pem --no-message-box

# echo ">> Sanitizing (again)..."
# xattr -c build/extension.crx


# mv build/extension.crx dist/CloudTabs.crx


echo ">> Zipping extension..."
(cd build/extension; zip -r ../../dist/CloudTabsExtension.zip .)


echo ">> Generating installer..."

mkdir -p build/installer/resources

cp installer-assets/* build/installer/resources

pkgbuild \
    --root build/app-support \
    --install-location "$APP_SUPPORT_DIR" \
    --identifier "$BUNDLE_ID.app-suppot" \
    build/installer/AppSupport.pkg

pkgbuild \
    --root build/native-host-manifest \
    --install-location "${CHROME_APP_SUPPORT_DIR}/NativeMessagingHosts" \
    --identifier "$BUNDLE_ID.native-host-manifest" \
    build/installer/NativeHostManifest.pkg

productbuild \
    --synthesize \
    --package build/installer/AppSupport.pkg \
    --package build/installer/NativeHostManifest.pkg \
    --identifier "$BUNDLE_ID" \
    --version "$VERSION" \
    build/installer/distribution.xml

./update-installer-xml.rb

productbuild \
    --distribution build/installer/distribution.xml \
    --package-path build/installer \
    --resources build/installer/resources \
    --version "$VERSION" \
    dist/CloudTabsNativeHost.pkg

echo ">> All done!"